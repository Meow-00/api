using System;

class slip1_Factorial
{
    static void Main()
    {
        Console.Write("Enter a number to calculate its factorial: ");
        int number = Convert.ToInt32(Console.ReadLine());
        long factorial = CalculateFactorial(number);
        Console.WriteLine($"The factorial of {number} is {factorial}");
    }

    static long CalculateFactorial(int n)
    {
        if (n < 0)
            throw new ArgumentException("Factorial is not defined for negative numbers.");
        
        long result = 1;
        for (int i = 1; i <= n; i++)
        {
            result *= i;
        }
        return result;
    }
}



using System;
using System.Windows.Forms;

namespace StudentInfoApp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            PopulateCourses();
        }

        private void PopulateCourses()
        {
            courseNameComboBox.Items.Add("Computer Science");
            courseNameComboBox.Items.Add("Electrical Engineering");
            courseNameComboBox.Items.Add("Mechanical Engineering");
            courseNameComboBox.Items.Add("Civil Engineering");
            courseNameComboBox.Items.Add("Mathematics");
            if (courseNameComboBox.Items.Count > 0)
                courseNameComboBox.SelectedIndex = 0;
        }

        private void submitButton_Click(object sender, EventArgs e)
        {
            string studentId = studentIdTextBox.Text.Trim();
            string studentName = studentNameTextBox.Text.Trim();
            string courseName = courseNameComboBox.SelectedItem.ToString();
            DateTime dateOfBirth = dobDateTimePicker.Value;

            if (string.IsNullOrEmpty(studentId) ||
                string.IsNullOrEmpty(studentName) ||
                string.IsNullOrEmpty(courseName))
            {
                MessageBox.Show("Please fill in all fields.", "Input Error",
                                MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            if (!int.TryParse(studentId, out int id))
            {
                MessageBox.Show("Student Id must be a numeric value.", "Input Error",
                                MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            displayListBox.Items.Clear();
            displayListBox.Items.Add("Student Information:");
            displayListBox.Items.Add($"ID: {studentId}");
            displayListBox.Items.Add($"Name: {studentName}");
            displayListBox.Items.Add($"Course: {courseName}");
            displayListBox.Items.Add($"Date of Birth: {dateOfBirth.ToShortDateString()}");

            studentIdTextBox.Clear();
            studentNameTextBox.Clear();
            courseNameComboBox.SelectedIndex = 0;
            dobDateTimePicker.Value = DateTime.Now;
        }
    }
}

Label for Student Id.
TextBox (studentIdTextBox) for entering the student ID.
Label for Student Name.
TextBox (studentNameTextBox) for entering the student name.
Label for Course Name.
ComboBox (courseNameComboBox) for selecting the course name.
Label for Date of Birth.
DateTimePicker (dobDateTimePicker) for selecting the date of birth.
Button (submitButton) with the text "Submit" to trigger data submission.
ListBox (displayListBox) to display the student information.
