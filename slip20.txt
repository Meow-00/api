using System;
using System.Text;
using System.Windows.Forms;

namespace PerfectNumbersApp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnShowPerfectNumbers_Click(object sender, EventArgs e)
        {
            StringBuilder perfectNumbers = new StringBuilder();

            for (int number = 1; number <= 100; number++)
            {
                if (IsPerfect(number))
                {
                    perfectNumbers.Append(number + " ");
                }
            }

            MessageBox.Show("Perfect numbers between 1 and 100: " + perfectNumbers.ToString());
        }

        private bool IsPerfect(int number)
        {
            int sum = 0;
            for (int i = 1; i < number; i++)
            {
                if (number % i == 0)
                {
                    sum += i;
                }
            }
            return sum == number;
        }
    }
}



using System;
using System.Windows.Forms;

namespace MatrixTriangleSumApp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnCalculate_Click(object sender, EventArgs e)
        {
            listBoxResults.Items.Clear();

            string[] dimensions = txtDimensions.Text.Split('x');
            if (dimensions.Length != 2 || !int.TryParse(dimensions[0], out int m) || !int.TryParse(dimensions[1], out int n))
            {
                MessageBox.Show("Please enter valid dimensions in the format MxN (e.g., 3x3).");
                return;
            }

            int[,] matrix = new int[m, n];

            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    matrix[i, j] = Convert.ToInt32(Microsoft.VisualBasic.Interaction.InputBox($"Enter element [{i},{j}]:", "Matrix Input"));
                }
            }

            int lowerSum = 0;
            int upperSum = 0;

            for (int i = 0; i < m; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    if (i > j)
                    {
                        lowerSum += matrix[i, j];
                    }
                    else if (i < j)
                    {
                        upperSum += matrix[i, j];
                    }
                }
            }

            listBoxResults.Items.Add($"Sum of lower triangle elements: {lowerSum}");
            listBoxResults.Items.Add($"Sum of upper triangle elements: {upperSum}");
        }
    }
}
